---
# NOTE: In the Docker environment, micronaut.http.services.auth.url is used by both
# the libre311-api service to get user permission (see PermissionsController.java) and
# the browser on host (it is returned to the browser by the frontend).
# So the setup must be so that this URL is resolved correctly by both of them.
# For example, if it is set to http://unity-auth-api:9090, the host must be able
# to access the unity-auth-api service from port 9090 on host, and the libre311-api
# service also must be able to access unity-auth-api using port 9090 on its container.
# This means the container for unity-auth-api must bind port 9090 on host to port 9090
# on the container.
micronaut:
  http:
    services:
      auth:
        url: ${AUTH_BASE_URL:`http://unity-auth-api:9090`}
  security:
    token:
      enabled: true
      jwt:
        enabled: true
        signatures:
          jwks:
            unity:
              url: ${AUTH_JWKS:`http://unity-auth-api:9090/keys`}
    redirect:
      login-success: http://localhost:3000
      login-failure: http://localhost:3000/?login-failed=true
      logout: http://localhost:8080
  server:
    cors:
      enabled: true
      configurations:
        allowedOrigins:
          - http://localhost:3000
          - localhost:3000
          - http://127.0.0.1:3000
    port: 8080
---
app:
  service-id: ${LIBRE311_SERVICE_ID:1}

datasources:
  default:
    url: jdbc:mysql://libre311-db:3306/libre311?allowPublicKeyRetrieval=true&useSSL=false
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: test
    db-type: mysql

flyway:
  datasources:
    default:
      locations:
        - classpath:db/migration
        - classpath:local
