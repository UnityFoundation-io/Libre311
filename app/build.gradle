// Copyright 2023 Libre311 Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.3.4"
    id("io.micronaut.test-resources") version "4.3.4"
}

version = "0.1"
group = "app"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("io.micronaut.validation:micronaut-validation")

    implementation "jakarta.persistence:jakarta.persistence-api:3.1.0"

    implementation("io.micronaut.xml:micronaut-jackson-xml")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-tomcat")
    implementation("io.micronaut.objectstorage:micronaut-object-storage-gcp")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation('com.opencsv:opencsv:5.7.1')
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.flyway:micronaut-flyway")
    runtimeOnly("org.flywaydb:flyway-mysql")
    runtimeOnly "org.yaml:snakeyaml"

    String databaseSelection = System.getenv("LIBRE311_DATABASE_DEPENDENCY")
    if (databaseSelection != null) {
        databaseSelection.split(',').each {part ->
            runtimeOnly(part)
        }
    } else {
        runtimeOnly("mysql:mysql-connector-java:8.0.31")
    }
}

application {
    mainClass.set("app.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("app.*")
    }
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop'
}
